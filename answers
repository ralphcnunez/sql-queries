UPDATE dataset
SET Weather_Conditions = 
    CASE Weather_Conditions
        WHEN -1 THEN 'Trace rain'
        WHEN 0 THEN 'Clear night'
        WHEN 1 THEN 'Sunny day'
        WHEN 2 THEN 'Partly cloudy (night)'
        WHEN 3 THEN 'Partly cloudy (day)'
        WHEN 4 THEN 'Not used'
        WHEN 5 THEN 'Mist'
        WHEN 6 THEN 'Fog'
        WHEN 7 THEN 'Cloudy'
        WHEN 8 THEN 'Overcast'
        WHEN 9 THEN 'Light rain shower (night)'
        WHEN 10 THEN 'Light rain shower (day)'
        WHEN 11 THEN 'Drizzle'
        WHEN 12 THEN 'Light rain'
        WHEN 13 THEN 'Heavy rain shower (night)'
        WHEN 14 THEN 'Heavy rain shower (day)'
        WHEN 15 THEN 'Heavy rain'
        WHEN 16 THEN 'Sleet shower (night)'
        WHEN 17 THEN 'Sleet shower (day)'
        WHEN 18 THEN 'Sleet'
        WHEN 19 THEN 'Hail shower (night)'
        WHEN 20 THEN 'Hail shower (day)'
        WHEN 21 THEN 'Hail'
        WHEN 22 THEN 'Light snow shower (night)'
        WHEN 23 THEN 'Light snow shower (day)'
        WHEN 24 THEN 'Light snow'
        WHEN 25 THEN 'Heavy snow shower (night)'
        WHEN 26 THEN 'Heavy snow shower (day)'
        WHEN 27 THEN 'Heavy snow'
        WHEN 28 THEN 'Thunder shower (night)'
        WHEN 29 THEN 'Thunder shower (day)'
        WHEN 30 THEN 'Thunder'
        ELSE 'Not available'
    END;



UPDATE dataset
SET Road_Type = 
    CASE Road_Type
        WHEN 1 THEN 'local distributor'
        WHEN 2 THEN 'link road'
        WHEN 3 THEN 'major access road'
        WHEN 4 THEN 'minor access road'
        WHEN 5 THEN 'home zone'
        WHEN 6 THEN 'access way'
        WHEN 7 THEN 'access lane'
        WHEN 8 THEN 'mews'
        WHEN 9 THEN 'residential square'
        ELSE Road_Type
    END;

!

question 1: Find the total number of accidents for each type of weather condition.

SELECT weather_conditions, COUNT(*) AS Total_Accidents
FROM dataset
GROUP BY weather_conditions;
Explanation: This query aggregates the number of accidents for each weather condition using the GROUP BY clause.

question 2: Retrieve accidents that occurred during foggy weather conditions.

SELECT *
FROM dataset
WHERE weather_conditions = 'Fog';
Explanation: This query filters accidents where the weather condition is 'Fog' using the WHERE clause.

question 3: Calculate the average number of casualties per accident for each type of road.

SELECT road_types, AVG(casualties) AS Avg_Casualties
FROM dataset
GROUP BY road_types;
Explanation: This query calculates the average number of casualties per accident for each road type using the GROUP BY clause.

: Find accidents that occurred on weekends during rainy weather conditions.

SELECT *
FROM dataset
WHERE DAYOFWEEK(date) IN (1, 7) AND weather_conditions = 'Rainy';
Explanation: This query filters accidents happening on weekends with rainy weather using the DAYOFWEEK function and WHERE clause.

: Retrieve accidents where the time of occurrence was between 6:00 AM and 9:00 AM on a major access road.

SELECT *
FROM dataset
WHERE TIME(time) BETWEEN '06:00:00' AND '09:00:00' AND road_types = 'Major Access Road';
Explanation: This query selects accidents occurring between 6:00 AM and 9:00 AM on major access roads using TIME and BETWEEN with WHERE clause.

question 6: Identify accidents that occurred during thunderstorms.

SELECT *
FROM dataset
WHERE weather_conditions = 'Thunderstorm';
Explanation: This query filters accidents happening during thunderstorms using the WHERE clause.

question 7: Calculate the total number of accidents for each hour of the day.

SELECT HOUR(time) AS Hour, COUNT(*) AS Total_Accidents
FROM dataset
GROUP BY HOUR(time);
Explanation: This query groups accidents by the hour of the day using HOUR function and GROUP BY clause.

question 8: Find accidents that occurred on weekdays with misty weather conditions.

SELECT *
FROM dataset
WHERE DAYOFWEEK(date) BETWEEN 2 AND 6 AND weather_conditions = 'Mist';
Explanation: This query selects accidents happening on weekdays with misty weather using DAYOFWEEK function and WHERE clause.

question 9: Retrieve accidents where the time of occurrence was after 5:00 PM on access lanes.

SELECT *
FROM dataset
WHERE TIME(time) > '17:00:00' AND road_types = 'Access Lane';
Explanation: This query selects accidents occurring after 5:00 PM on access lanes using TIME function and WHERE clause.

question 10: Calculate the average number of casualties per accident for each hour of the day.

SELECT HOUR(time) AS Hour, AVG(casualties) AS Avg_Casualties
FROM dataset
GROUP BY HOUR(time);
Explanation: This query calculates the average number of casualties per accident for each hour of the day using HOUR function and GROUP BY clause.

question 11: Find accidents that occurred during snow showers.

SELECT *
FROM dataset
WHERE weather_conditions LIKE '%Snow%';
Explanation: This query filters accidents happening during any type of snow showers using LIKE and WHERE clause.

question 12: Retrieve accidents where the time of occurrence was between 12:00 PM and 3:00 PM on home zones.

SELECT *
FROM dataset
WHERE TIME(time) BETWEEN '12:00:00' AND '15:00:00' AND road_types = 'Home Zone';
Explanation: This query selects accidents occurring between 12:00 PM and 3:00 PM on home zones using TIME and BETWEEN with WHERE clause.

question 13: Calculate the total number of accidents for each type of road.

SELECT road_types, COUNT(*) AS Total_Accidents
FROM dataset
GROUP BY road_types;
Explanation: This query aggregates the number of accidents for each type of road using the GROUP BY clause.

question 14: Find accidents that occurred during heavy rain.

SELECT *
FROM dataset
WHERE weather_conditions = 'Heavy Rain';
Explanation: This query filters accidents happening during heavy rain using the WHERE clause.

question 15: Retrieve accidents where the time of occurrence was between 9:00 AM and 12:00 PM on residential squares.

SELECT *
FROM dataset
WHERE TIME(time) BETWEEN '09:00:00' AND '12:00:00' AND road_types = 'Residential Square';
Explanation: This query selects accidents occurring between 9:00 AM and 12:00 PM on residential squares using TIME and BETWEEN with WHERE clause.

question 16: Identify accidents that occurred during hailstorms.
SELECT *
FROM dataset
WHERE weather_conditions = 'Hail';
Explanation: This query filters accidents happening during hailstorms using the WHERE clause.

question 17: Calculate the total number of accidents for each type of weather condition during nighttime.
SELECT weather_conditions, COUNT(*) AS Total_Accidents
FROM dataset
WHERE TIME(time) BETWEEN '20:00:00' AND '06:00:00'
GROUP BY weather_conditions;
Explanation: This query aggregates the number of accidents for each weather condition during nighttime using TIME, BETWEEN, and GROUP BY clauses.

question 18: Find accidents that occurred during sleet.
Copy code
SELECT *
FROM dataset
WHERE weather_conditions = 'Sleet';
Explanation: This query filters accidents happening during sleet using the WHERE clause.

question 19: Retrieve accidents where the time of occurrence was between 3:00 PM and 6:00 PM on mews.
sql
Copy code
SELECT *
FROM dataset
WHERE TIME(time) BETWEEN '15:00:00' AND '18:00:00' AND road_types = 'Mews';
Explanation: This query selects accidents occurring between 3:00 PM and 6:00 PM on mews using TIME and BETWEEN with WHERE clause.

question 10: Calculate the average number of casualties per accident for each type of weather condition.
sql
Copy code
SELECT weather_conditions, AVG(casualties) AS Avg_Casual


